[{"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/type.js":"1","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Footer.js":"2","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/constants/global.js":"3","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Modal.js":"4","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Submit.js":"5","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/c.js":"6","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CollabEditor.js":"7","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CollabEditorIndex.js":"8","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/App.js":"9","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/index.js":"10","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/ToggleTheme.js":"11","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Input.js":"12","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/actions/index.js":"13","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/javascript.js":"14","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/utils/setAuthToken.js":"15","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/code-settings.js":"16","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/cpp.js":"17","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/index.js":"18","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/user.js":"19","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CodeEditorIndex.js":"20","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Home.js":"21","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/utils/useDarkMode.js":"22","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Editor.js":"23","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Terminal.js":"24","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/code.js":"25","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/user.js":"26","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Header.js":"27","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/code.js":"28","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/constants/theme.js":"29","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/python.js":"30","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/java.js":"31"},{"size":266,"mtime":1611310926492,"results":"32","hashOfConfig":"33"},{"size":228,"mtime":1611239448490,"results":"34","hashOfConfig":"33"},{"size":408,"mtime":1611239448502,"results":"35","hashOfConfig":"33"},{"size":1613,"mtime":1611430497608,"results":"36","hashOfConfig":"33"},{"size":517,"mtime":1611239448490,"results":"37","hashOfConfig":"33"},{"size":125,"mtime":1611239448496,"results":"38","hashOfConfig":"33"},{"size":9229,"mtime":1611449097021,"results":"39","hashOfConfig":"33"},{"size":864,"mtime":1611316550437,"results":"40","hashOfConfig":"33"},{"size":1071,"mtime":1611430107235,"results":"41","hashOfConfig":"33"},{"size":144,"mtime":1611239448504,"results":"42","hashOfConfig":"33"},{"size":1657,"mtime":1611239448491,"results":"43","hashOfConfig":"33"},{"size":1456,"mtime":1611239448490,"results":"44","hashOfConfig":"33"},{"size":384,"mtime":1611239448504,"results":"45","hashOfConfig":"33"},{"size":74,"mtime":1611239448497,"results":"46","hashOfConfig":"33"},{"size":242,"mtime":1611310926526,"results":"47","hashOfConfig":"33"},{"size":862,"mtime":1611239448495,"results":"48","hashOfConfig":"33"},{"size":146,"mtime":1611239448497,"results":"49","hashOfConfig":"33"},{"size":720,"mtime":1611239448503,"results":"50","hashOfConfig":"33"},{"size":941,"mtime":1611310926525,"results":"51","hashOfConfig":"33"},{"size":819,"mtime":1611239448489,"results":"52","hashOfConfig":"33"},{"size":1283,"mtime":1611239448499,"results":"53","hashOfConfig":"33"},{"size":783,"mtime":1611239448505,"results":"54","hashOfConfig":"33"},{"size":5416,"mtime":1611449176479,"results":"55","hashOfConfig":"33"},{"size":4504,"mtime":1611430503842,"results":"56","hashOfConfig":"33"},{"size":862,"mtime":1611239448487,"results":"57","hashOfConfig":"33"},{"size":521,"mtime":1611310926493,"results":"58","hashOfConfig":"33"},{"size":2781,"mtime":1611310926523,"results":"59","hashOfConfig":"33"},{"size":684,"mtime":1611430500403,"results":"60","hashOfConfig":"33"},{"size":298,"mtime":1611239448502,"results":"61","hashOfConfig":"33"},{"size":66,"mtime":1611239448498,"results":"62","hashOfConfig":"33"},{"size":159,"mtime":1611239448497,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1u1bsim",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/type.js",[],["137","138"],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Footer.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/constants/global.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Modal.js",["139"],"import React, { useRef, useEffect } from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport styles from \"./styles/header.module.css\";\n\nfunction useOutsideAlerter(ref, unclick) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        // alert(\"You clicked outside of me!\");\n        unclick();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, unclick]);\n}\n\nfunction Modal({ user, logout, unclick }) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, unclick);\n\n  return (\n    <div ref={wrapperRef} className={styles.modal}>\n      <img\n        className={styles.modalImage}\n        src={user.image}\n        // className={styles.image}\n      />\n      <h3 className={styles.modalName}>{user.name}</h3>\n      <h4 className={styles.modalEmail}>{user.email}</h4>\n      <GoogleLogout\n        clientId=\"356951841595-6v3gpur9sleddtq4l350j62gf8dp8mfj.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        render={(renderProps) => (\n          <div\n            className={styles.logout}\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n          >\n            Logout\n          </div>\n        )}\n        onLogoutSuccess={logout}\n      ></GoogleLogout>\n    </div>\n  );\n}\n\nexport default Modal;\n","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Submit.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/c.js",[],["140","141"],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CollabEditor.js",["142","143"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { ControlledEditor } from \"@monaco-editor/react\";\nimport { executeCode, setLoadingTrue } from \"../../actions/code\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from \"./Input\";\nimport Submit from \"./Submit\";\nimport Split from \"react-split\";\nimport styled from \"styled-components\";\nimport styles from \"./styles/editor.module.css\";\nimport \"./styles/style.css\";\nimport io from \"socket.io-client\";\nimport { Play } from \"react-feather\";\nimport Peer from \"peerjs\";\nimport Draggable from \"react-draggable\";\nimport { BiLinkExternal } from \"react-icons/bi\";\nimport { MdDragHandle, MdAirplay } from \"react-icons/md\";\nimport {\n  getDefaultCode,\n  setLanguageLocalStorage,\n  getLanguageLocalStorage,\n  setCodeLocalStorage,\n  getCodeLocalStorage,\n} from \"./utils/code-settings\";\n\nconst ENDPOINT = \"http://localhost:3000\";\n\nconst socket = io(ENDPOINT);\n\nconst mypeer = new Peer(undefined, {\n  host: \"/\",\n  port: \"3001\",\n});\n\nconst OutputWindow = styled.div`\n  border-radius: 5px;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow: auto;\n  flex: 1;\n  max-height : 60vh;\n  color: ${(props) => (props.error ? \"red\" : \"black\")};\n`;\n\nconst CodeEditor = ({ theme, roomId }) => {\n  const loading = useSelector((state) => state.code.isFetching);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  // const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  const [language, setLanguage] = useState(\"java\");\n  const [input, setInput] = useState(\"\");\n  const [token, setToken] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const valueGetter = useRef();\n  let output = useSelector((state) => state.code.output);\n\n  let error = useSelector((state) => state.code.error);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWindowDimensions);\n\n    if (getLanguageLocalStorage()) {\n      setLanguage(getLanguageLocalStorage());\n      if (getCodeLocalStorage()) {\n        setCode(getCodeLocalStorage());\n      } else setCode(getDefaultCode(getLanguageLocalStorage()));\n    } else {\n      setCode(getDefaultCode(language));\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", updateWindowDimensions);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(\"socket: browser says ping (1)\");\n    socket.on(\"setLanguage\", function (data) {\n      // console.log(data);\n      setLanguageLocalStorage(data);\n      setCode(getDefaultCode(data));\n      setCodeLocalStorage(getDefaultCode(data));\n      setLanguage(data);\n    });\n    socket.on(\"setInput\", (data) => {\n      setInput(data);\n    });\n    socket.on(\"setOutput\", (data) => {\n      dispatch(data);\n    });\n    socket.on(\"setCodeExec\", (data) => {\n      setCodeLocalStorage(data);\n      setCode(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    mypeer.on(\"open\", (vdid) => {\n      console.log(\"id \", vdid);\n      setToken(vdid);\n      getMedia().then((media) => addVideoStream(media, vdid, true));\n      socket.emit(\"joinRoom\", roomId, vdid);\n    });\n\n    socket.on(\"userDisconnected\", (userToken) => {\n      console.log(\"userDisconnected \", userToken);\n      const vidElement = document.getElementsByClassName(`${userToken}`);\n      vidElement[0].remove();\n    });\n    socket.on(\"fromOldUser\", (token) => {\n      console.log(\"fromOldUser \", token);\n      mypeer.on(\"call\", (call) => {\n        console.log(\"call from peer\");\n        getMedia().then((media) => call.answer(media));\n        call.on(\"stream\", (stream) => {\n          console.log(\"stream \", token);\n          addVideoStream(stream, token, false);\n        });\n      });\n    });\n  }, [roomId]);\n\n  useEffect(() => {\n    if (token) {\n      socket.on(\"userConnected\", (vdid, socketId) => {\n        getMedia().then((media) => {\n          console.log(\"vdid\", vdid);\n          const call = mypeer.call(vdid, media);\n          call.on(\"stream\", (stream) => {\n            addVideoStream(stream, vdid, false);\n          });\n          call.on(\"close\", () => {\n            const video = document.querySelector(`.${vdid}`);\n            video.remove();\n          });\n          console.log(\"userConnected\", vdid);\n          socket.emit(\"sendNewUser\", token, socketId);\n        });\n      });\n    }\n  }, [token]);\n\n  const updateWindowDimensions = () => {\n    setWindowWidth(window.innerWidth);\n    // setWindowHeight(window.innerHeight);\n  };\n\n  const handleEditorDidMount = (_valueGetter) => {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  };\n\n  const addVideoStream = (media, id, isMuted) => {\n    const myVideo = document.createElement(\"video\");\n    const exist = document.getElementsByClassName(`${id}`);\n    console.log(exist.length);\n    if (exist.length) return;\n    myVideo.classList.add(id);\n    const VideoGrid = document.querySelector(\".videoBox\");\n    myVideo.muted = isMuted;\n    myVideo.controls = true;\n    myVideo.disablePictureInPicture = true;\n    myVideo.srcObject = media;\n    myVideo.addEventListener(\"loadedmetadata\", () => {\n      myVideo.play();\n    });\n    VideoGrid.append(myVideo);\n  };\n\n  const getMedia = async () => {\n    return await navigator.mediaDevices.getUserMedia({\n      video: { frameRate: { ideal: 10, max: 15 } },\n      audio: { noiseSuppression: true, echoCancellation: true },\n    });\n  };\n\n  const onChangeCode = (newValue, e) => {\n    // console.log(\"onChange\" + e);\n    socket.emit(\"getCodeExec\", e);\n    setCodeLocalStorage(e);\n    setCode(e);\n  };\n\n  const SubmitCode = async () => {\n    dispatch(setLoadingTrue());\n    const res = await executeCode(code, language, input);\n    dispatch(res);\n    // getOutput();\n    socket.emit(\"getOutput\", res);\n  };\n\n  const changeLanguage = (e) => {\n    setLanguageLocalStorage(e.target.value);\n    setCode(getDefaultCode(e.target.value));\n    setCodeLocalStorage(getDefaultCode(e.target.value));\n    socket.emit(\"getLanguage\", e.target.value);\n    setLanguage(e.target.value);\n  };\n\n  const HideVideo = () => {\n    const VidGrid = document.querySelector(\".videogrid\");\n    VidGrid.classList.add(\"hide\");\n  };\n\n  const ShowVideo = () => {\n    const VidGrid = document.querySelector(\".videogrid\");\n    VidGrid.classList.remove(\"hide\");\n  };\n\n  return (\n    <>\n      <div className={styles.row}>\n        <Split\n          direction={windowWidth > 800 ? \"horizontal\" : \"vertical\"}\n          sizes={[60, 40]}\n          minSize={windowWidth > 800 ? 0 : 500}\n          snapOffset={windowWidth > 800 ? 200 : 0}\n          gutterSize={20}\n          gutterAlign=\"center\"\n          className={styles.splitHor}\n        >\n          <div className={styles.left}>\n            <div className={styles.runCode}>\n              <Submit language={language} changeLanguage={changeLanguage} />\n              <div\n                className={styles.submitButton}\n                onClick={SubmitCode}\n                disabled={!isEditorReady}\n              >\n                {loading ? \"Loading..\" : \"Run Code\"}\n                <Play style={{ paddingLeft: 10, fontSize: \"1em\" }} />\n              </div>\n            </div>\n            <ControlledEditor\n              className=\"editor\"\n              language={language}\n              theme={theme === \"dark\" ? \"vs-dark\" : \"light\"}\n              editorDidMount={handleEditorDidMount}\n              value={code}\n              onChange={onChangeCode}\n            />\n          </div>\n          <div className={styles.right}>\n            <div className={styles.column}>\n              <Split\n                direction=\"vertical\"\n                sizes={windowWidth > 800 ? [75, 25] : [100, 0]}\n                minSize={0}\n                snapOffset={windowWidth > 800 ? 100 : 0}\n                gutterSize={20}\n                gutterAlign=\"center\"\n                className={styles.splitVer}\n              >\n                <div className={styles.output}>\n                  <div className={styles.outputHead}>\n                    <div>Output</div>\n                    <div className={styles.showVid} onClick={() => ShowVideo()}>\n                      <MdAirplay />\n                    </div>\n                  </div>\n                  <OutputWindow error={error === \"\" ? false : true}>\n                    {output ? console.log(output) : null}\n                    <pre style={{ width: \"100%\" }}>\n                      {output === \"\" ? error : output}\n                    </pre>\n                  </OutputWindow>\n                </div>\n                <div className={styles.input}>\n                  <Input input={input} setInput={setInput} theme={theme} />\n                </div>\n              </Split>\n            </div>\n          </div>\n        </Split>\n        <Draggable handle={\".dragHead\"} bounds=\"parent\">\n          <div className=\"videogrid\">\n            <div className=\"dragHead\">\n              <MdDragHandle className=\"dragger\" />\n              <BiLinkExternal\n                style={{ margin: 5 }}\n                onClick={() => {\n                  HideVideo();\n                }}\n              />\n            </div>\n            <div className=\"videoBox\"></div>\n          </div>\n        </Draggable>\n      </div>\n    </>\n  );\n};\n\nexport default CodeEditor;\n","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CollabEditorIndex.js",["144"],"import React, { useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../../constants/theme\";\nimport { GlobalStyles } from \"../../constants/global\";\nimport { useDarkMode } from \"../../utils/useDarkMode\";\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Editor from \"./CollabEditor\";\n\nconst CollabEditorIndex = (props) => {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles />\n      <Header theme={theme} toggleTheme={toggleTheme} />\n      <Footer />\n      <Editor theme={theme} roomId={props.match.params.id}/>\n    </ThemeProvider>\n  );\n};\n\nexport default CollabEditorIndex;\n",["145","146"],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/App.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/index.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/ToggleTheme.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Input.js",["147"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles/input.module.css\";\nimport io from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:3000\";\nconst socket = io(ENDPOINT);\n\nconst Div = styled.div`\n  height: 100%;\n  // flex: 1;\n  box-sizing: border-box;\n  margin: 20;\n  color: ${(props) => props.error && \"red\"};\n  background-color: \"#eeeeee\";\n  overflow: scroll;\n  outline: none;\n`;\n\nconst TextInput = styled.textarea`\n  color: ${(props) => (props.theme === \"dark\" ? \"white\" : \"black\")};\n  background-color: ${(props) =>\n    props.theme === \"dark\" ? \"#1e1e1e\" : \"white\"};\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  outline: none;\n  resize: none;\n  border: none;\n  border-radius: 0;\n  font-size: 1.2em;\n`;\n\nconst Input = ({ input, setInput, theme }) => {\n  let output = useSelector((state) => state.code.output);\n  let error = useSelector((state) => state.code.error);\n\n  useEffect(() => {\n    console.log(output);\n  }, [output]);\n  return (\n    <Div className={styles.input_field}>\n      <TextInput\n        theme={theme}\n        value={input}\n        onChange={(e) => {\n          console.log(e.target.value);\n          socket.emit(\"getInput\", e.target.value);\n          setInput(e.target.value);\n        }}\n        className={styles.textarea_input}\n        placeholder=\"Give input here...\"\n      />\n    </Div>\n  );\n};\n\nexport default Input;\n",["148","149"],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/actions/index.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/javascript.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/utils/setAuthToken.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/code-settings.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/cpp.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/index.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/user.js",["150"],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/CodeEditorIndex.js",["151"],"import React, { useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../../constants/theme\";\nimport { GlobalStyles } from \"../../constants/global\";\nimport { useDarkMode } from \"../../utils/useDarkMode\";\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Editor from \"./Editor\";\n\nconst CodeEditorIndex = () => {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles />\n      <Header theme={theme} toggleTheme={toggleTheme} />\n      <Footer />\n      <Editor theme={theme} />\n    </ThemeProvider>\n  );\n};\n\nexport default CodeEditorIndex;\n","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Home.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/utils/useDarkMode.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/Editor.js",["152","153","154"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { ControlledEditor } from \"@monaco-editor/react\";\nimport { executeCode, setLoadingTrue } from \"../../actions/code\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from \"./Input\";\nimport Submit from \"./Submit\";\nimport Split from \"react-split\";\nimport styled from \"styled-components\";\nimport styles from \"./styles/editor.module.css\";\nimport \"./styles/style.css\";\nimport { Play } from \"react-feather\";\nimport {\n  getDefaultCode,\n  setLanguageLocalStorage,\n  getLanguageLocalStorage,\n  setCodeLocalStorage,\n  getCodeLocalStorage,\n} from \"./utils/code-settings\";\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n`;\n\nconst OutputWindow = styled.div`\n  border-radius: 5px;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow: auto;\n  max-height : 60vh;\n  flex: 1;\n  color: ${(props) => (props.error ? \"red\" : \"black\")};\n`;\n\nconst CodeEditor = ({ theme }) => {\n  const loading = useSelector((state) => state.code.isFetching);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  const [language, setLanguage] = useState(\"java\");\n  const [input, setInput] = useState(\"\");\n  // const [output, setOutput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const valueGetter = useRef();\n  let output = useSelector((state) => state.code.output);\n\n  let error = useSelector((state) => state.code.error);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWindowDimensions);\n\n    if (getLanguageLocalStorage()) {\n      setLanguage(getLanguageLocalStorage());\n      if (getCodeLocalStorage()) {\n        setCode(getCodeLocalStorage());\n      } else setCode(getDefaultCode(getLanguageLocalStorage()));\n    } else {\n      setCode(getDefaultCode(language));\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", updateWindowDimensions);\n    };\n  }, []);\n\n  const updateWindowDimensions = () => {\n    setWindowWidth(window.innerWidth);\n    setWindowHeight(window.innerHeight);\n  };\n\n  const handleEditorDidMount = (_valueGetter) => {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  };\n\n  const onChangeCode = (newValue, e) => {\n    // console.log(\"onChange\" + e);\n    setCodeLocalStorage(e);\n    setCode(e);\n  };\n\n  const SubmitCode = async () => {\n    dispatch(setLoadingTrue());\n    const res = await executeCode(code, language, input);\n    dispatch(res);\n    // getOutput();\n  };\n\n  const changeLanguage = (e) => {\n    setLanguageLocalStorage(e.target.value);\n    setCode(getDefaultCode(e.target.value));\n    setCodeLocalStorage(getDefaultCode(e.target.value));\n    setLanguage(e.target.value);\n  };\n  return (\n    <>\n      <div className={styles.row}>\n        <Split\n          direction={windowWidth > 800 ? \"horizontal\" : \"vertical\"}\n          sizes={[60, 40]}\n          minSize={windowWidth > 800 ? 0 : 500}\n          snapOffset={windowWidth > 800 ? 200 : 0}\n          gutterSize={20}\n          gutterAlign=\"center\"\n          className={styles.splitHor}\n        >\n          <div className={styles.left}>\n            <div className={styles.runCode}>\n              <Submit language={language} changeLanguage={changeLanguage} />\n              <div\n                className={styles.submitButton}\n                onClick={SubmitCode}\n                disabled={!isEditorReady}\n              >\n                {loading ? \"Loading..\" : \"Run Code\"}\n                <Play style={{ paddingLeft: 10, fontSize: \"1em\" }} />\n              </div>\n            </div>\n            {/* <Editor\n                wrapperClassName=\"editor\"\n              language={language}\n              theme={theme === \"dark\" ? \"vs-dark\" : \"light\"}\n              editorDidMount={handleEditorDidMount}\n            /> */}\n            <ControlledEditor\n              // wrapperClassName=\"editor\"\n              className=\"editor\"\n              language={language}\n              theme={theme === \"dark\" ? \"vs-dark\" : \"light\"}\n              editorDidMount={handleEditorDidMount}\n              value={code}\n              onChange={onChangeCode}\n            />\n          </div>\n          <div className={styles.right}>\n            <div className={styles.column}>\n              <Split\n                direction=\"vertical\"\n                sizes={windowWidth > 800 ? [75, 25] : [100, 0]}\n                minSize={0}\n                snapOffset={windowWidth > 800 ? 100 : 0}\n                gutterSize={20}\n                gutterAlign=\"center\"\n                className={styles.splitVer}\n              >\n                <div className={styles.output}>\n                  <div className={styles.outputHead}>Output</div>\n                  <OutputWindow error={error === \"\" ? false : true}>\n                    {output ? console.log(output) : null}\n                    <pre style={{ width: \"100%\" }}>\n                      {output === \"\" ? error : output}\n                    </pre>\n                  </OutputWindow>\n                </div>\n                <div className={styles.input}>\n                  <Input input={input} setInput={setInput} theme={theme} />\n                </div>\n              </Split>\n            </div>\n          </div>\n        </Split>\n      </div>\n    </>\n  );\n};\n\nexport default CodeEditor;\n","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Terminal.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/code.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/actions/user.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/home/Header.js",["155","156"],"import React, { useEffect, useState } from 'react';\nimport Footer from '../code-editor/Footer';\nimport styles from './styles/header.module.css';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from '../../reducers/actions';\nimport { FcGoogle } from 'react-icons/fc';\nimport Modal from './Modal';\nimport { auth } from '../../actions/user';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [clicked, setClicked] = useState(false);\n\n  const responseGoogle = res => {\n    if (res.error) {\n      console.log(res.error);\n      return;\n    }\n    console.log(res);\n    const user = {\n      email: res.profileObj.email,\n      name: res.profileObj.name,\n      image: res.profileObj.imageUrl\n    };\n    authorize(user);\n    //dispatch(setUser(user));\n  };\n\n  const authorize = async user => {\n    const res = await auth(user);\n    dispatch(res);\n  };\n\n  const logout = () => {\n    console.log('User logged Out');\n    const user = {\n      email: '',\n      name: '',\n      image: ''\n    };\n    dispatch(setUser(user));\n    setClicked(false);\n  };\n\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <>\n      <div className={styles.header_container}>\n        {user.name == '' ? (\n          <GoogleLogin\n            clientId='356951841595-6v3gpur9sleddtq4l350j62gf8dp8mfj.apps.googleusercontent.com'\n            buttonText='Google Login'\n            render={renderProps => (\n              <div className={styles.loginButton}>\n                <FcGoogle style={{ marginRight: 10, fontSize: '1.5em' }} />\n                <span\n                  className={styles.login}\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Login with Google\n                </span>\n              </div>\n            )}\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            isSignedIn={true}\n            cookiePolicy={'single_host_origin'}\n          />\n        ) : (\n          <>\n            <div className={styles.profileImage}>\n              <img\n                onClick={handleClick}\n                src={user.image}\n                className={styles.image}\n              />\n              {clicked ? (\n                <Modal\n                  user={user}\n                  logout={logout}\n                  unclick={() => setClicked(false)}\n                />\n              ) : null}\n            </div>\n          </>\n        )}\n\n        {/* <button className={styles.header_button}>Login</button> */}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Header;\n","/media/tushar/New Volume/Webdev/Remote-Executor/client/src/reducers/code.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/constants/theme.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/python.js",[],"/media/tushar/New Volume/Webdev/Remote-Executor/client/src/components/code-editor/utils/languages/java.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":32,"column":7,"nodeType":"163","endLine":36,"endColumn":9},{"ruleId":"157","replacedBy":"164"},{"ruleId":"159","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":74,"column":6,"nodeType":"168","endLine":74,"endColumn":8,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"170","line":95,"column":6,"nodeType":"168","endLine":95,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"157","replacedBy":"176"},{"ruleId":"159","replacedBy":"177"},{"ruleId":"172","severity":1,"message":"178","line":37,"column":7,"nodeType":"174","messageId":"175","endLine":37,"endColumn":12},{"ruleId":"157","replacedBy":"179"},{"ruleId":"159","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":9,"column":1,"nodeType":"183","endLine":45,"endColumn":2},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"184","line":20,"column":7,"nodeType":"174","messageId":"175","endLine":20,"endColumn":10},{"ruleId":"172","severity":1,"message":"185","line":40,"column":10,"nodeType":"174","messageId":"175","endLine":40,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":66,"column":6,"nodeType":"168","endLine":66,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":58,"column":20,"nodeType":"189","messageId":"190","endLine":58,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":82,"column":15,"nodeType":"163","endLine":86,"endColumn":17},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["191"],["192"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'language'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCode' needs the current value of 'language'.","ArrayExpression",["193"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["194"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["191"],["192"],"'error' is assigned a value but never used.",["191"],["192"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Row' is assigned a value but never used.","'windowHeight' is assigned a value but never used.",["195"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"196","fix":"200"},"Update the dependencies array to be: [language]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},{"range":"205","text":"202"},[2351,2353],"[language]",[2903,2905],"[dispatch]",[2073,2075]]